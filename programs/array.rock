A Chain Link looks like nothing               (class declaration, inherits nothing)
  the morning is nowhere                      (reference to previous)
  the evening is gone                         (reference to next)
  the load is nothing                         (the payload)
  A Chain Link takes the burden               (constructor with the payload)
    put the burden into the load              
                                              (end of method)
  the ray takes the burden                    ("set")
    put the burden into the load              
    give back the burden                      
                                              (eom)
  the sunrise takes the sun                   (attach to previous)
    let the morning be the sun                
    if the sun is not gone                    (call "attach to next" on the previous)
      the sunset on the sun taking self       (method call, "self" access)

    give back the sun
                                              (eom)
  the sunset takes the sun                    (attach to next)
    let the evening be the sun                 
    give back the sun
                                              (eom)
  the eclipse takes nothing                   (clearNext)
    let tonight be the evening
    let the evening be nowhere                
    give back tonight
                                              (end of method)
  tomorrow takes nothing                      (getNext)
    give back the morning                     
                                              (eom)
  the look takes nothing                      (getPrevoius)
    give back the load                        
                                              (eom)
                                              (end of class A Chain Link)
A Chain looks like nothing                                        (class declaration, inherits nothing, no constructor)
  the brave is nowhere                                            
  the coward is gone                                              
  the army is invincible                                          
  add takes the sword                                             (add to the list)
    the warrior wants to be A Chain Link taking the sword         (initialize a container with the vale)
    if the coward is not gone                                     
      the sunrise on the coward taking the warrior                (append to the tail element)
                                                                  (end if)
    let the coward be the warrior                                 (this is the tail)
    if the brave is nowhere                                       
      let the brave be the warrior                                (set the list head, if not set)
                                                                  (end if)
    build the army up                                             (increase size)
    give back the burden                                          
                                                                  (eom)
  remove takes nothing                                            (remove the last, give back its value)
    if the coward is gone                                         (if the list is empty)
      give back nothing
                                                                  (end if)
    let the burden be the look on the coward                      (get the value from the last)
    let the coward be the eclipse on the coward                   (remove the last)
    knock the army down                                           (decrease size)
    give back the burden
                                                                  (eom)
  size takes nothing                                              (size)
    give back the army                                            
                                                                  (eom)
  first takes nothing                                             (first value)
    give back the look on the brave                               
                                                                  (eom)
  last takes nothing                                              (last value)
    give back the look on the coward                              
                                                                  ((eom))
  peek takes the enemy                                            (get a value at given index)
    if nothing is as weak as the enemy and the enemy is weaker than the army    (check index bounds)
      let the warrior be the brave                                (iterate through the containers)
      while the enemy is stronger than nothing
        let the warrior be tomorrow on the warrior                (next container)
        knock the enemy down
                                                                  (end while)
      give back the look on the warrior                           (return the value)
                                                                  (end if)
    give back mysterious
                                                                  (eom)
                                                                  (end of class Chain)
Array looks like A Chain
  set takes the enemy, the sword                                  (set: index, value)
    if nothing is as weak as the enemy                            (if the index is non-negative)
      let the ghost be the enemy
      build the ghost up
      if the ghost is stronger than the army                      (we need to expand)
        while the ghost is stronger than the army                 (expand until we have the limit)
           add taking mysterious                                  (initialize the skipped indexes)
                                                                  (end while)
        let the warrior be the coward
      otherwise                                                   (we need to find the proper element)
        let the warrior be the brave
        while the enemy is stronger than nothing
          let the warrior be tomorrow on the warrior              (next)
          knock the enemy down
                                                                  (end while)
                                                                  (end if)
      the ray on the warrior taking the sword                     (set the value for the current)
      give back the sword
    otherwise
      give back nothing
                                                                  (end if)
                                                                  (eom)
  get takes the enemy                                             (get)
    give back peek taking the enemy
                                                                  (eom)
  description takes nothing
    let the show be "["
    let the warrior be the brave
    while the warrior is not gone
      let the show be with the look on the warrior
      if the warrior is not the coward
        let the show be with ", "
      (end if)
      let the warrior be tomorrow on the warrior
    (end while)
    give back the show with "]"
                                                                  (eom)
                                                                  (end of class Array)
the rainbow would be A Chain                (instantiation)

add on the rainbow taking "Red"            (method calls)
add on the rainbow taking "Orange"
add on the rainbow taking "Green"
add on the rainbow taking "Blue"
add on the rainbow taking "Violet"

shout last on the rainbow (Violet)
shout peek on the rainbow taking 2 (Green - index starts at 0)
shout peek on the rainbow taking 5 (mysterious - no such index)
say remove on the rainbow (Violet) (remove all elements, one by one)
say remove on the rainbow (Blue)
say size on the rainbow (3)        (3 elements left)
say remove on the rainbow (Green)
say remove on the rainbow (Orange)
say remove on the rainbow (Red)
say size on the rainbow (0)        (all elements removed)

x will be Array
set on x taking 3,"d"
say description on x
set on x taking 0,"a"
say description on x
set on x taking 6,"g"
set on x taking 3, mysterious
say description on x

